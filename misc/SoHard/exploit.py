S = """rrFrrrrroROforrrErFrrroROfoRRRErrrFroRRROfoERRRERRRRRRRRRRRRRERRRRFroRRROfoRERRRRRRRRRRRRErEFrrroROfoRErrrrErFroRRROforErrFrrroROforrERRFroRRROfoEFrrroROforErrrrrrrrrrrrErrrrrrrErrFrrroROforERFroRRROfoERRErrERRRRRRRERRRRRRRRRRRRERRRFroRRROfoRRERRRRRRRRERRRRRErrrrrrrrrrrrrrrERRRRRRRErrrrrrrERRRRERRRRRRRREorrFrroRRROfoE"""

# === B1: Map ký hiệu → Brainfuck lệnh ===
M = {
    'R': '+',
    'r': '-',
    'O': '>',
    'o': '<',
    'F': '[',
    'f': ']',
    'E': '.',  # print
}

bf_code = "".join(M.get(c, "") for c in S)

# === B2: Interpreter Brainfuck ===
def run_bf(code):
    tape = [0] * 30000
    ptr = 0
    out = ""
    i = 0
    loopmap = {}
    stack = []

    # build loop map
    for j, c in enumerate(code):
        if c == "[":
            stack.append(j)
        elif c == "]":
            k = stack.pop()
            loopmap[k] = j
            loopmap[j] = k

    # run
    while i < len(code):
        c = code[i]
        if c == ">": ptr += 1
        elif c == "<": ptr -= 1
        elif c == "+": tape[ptr] = (tape[ptr] + 1) % 256
        elif c == "-": tape[ptr] = (tape[ptr] - 1) % 256
        elif c == ".": out += chr(tape[ptr])
        elif c == "[" and tape[ptr] == 0: i = loopmap[i]
        elif c == "]" and tape[ptr] != 0: i = loopmap[i]
        i += 1
    return out

# === B3: Interpret và in kết quả ===
flag = run_bf(bf_code)
print("Brainfuck output:", flag)